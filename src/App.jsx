import React, { useState, useEffect } from 'react'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É React –∏ —Ö—É–∫–∏ useState, useEffect
import './App.css'; // –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å—Ç–∏–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
import ToDoForm from "./AddTask"; // –ò–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á
import ToDo from "./Task"; // –ò–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–¥–Ω–æ–π –∑–∞–¥–∞—á–∏
import axios from 'axios'; // –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤

const weatherApiKey = 'c7616da4b68205c2f3ae73df2c31d177';

// –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function App() {
  const [rates, setRates] = useState({}); // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∞–ª—é—Ç–Ω—ã—Ö –∫—É—Ä—Å–æ–≤ (–æ–±—ä–µ–∫—Ç –∏ —Ñ—É–Ω–∫—Ü–∏—è)
  const [weatherData, setWeatherData] = useState(null); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ
  const [loading, setLoading] = useState(true); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
  const [error, setError] = useState(''); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö
  const [todos, setTodos] = useState([]); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á


  useEffect(() => {
    async function fetchAllData() {
      try {

        const currencyResponse = await axios.get('https://www.cbr-xml-daily.ru/daily_json.js');
        if (!currencyResponse.data || !currencyResponse.data.Valute) {
          throw new Error('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –≤–∞–ª—é—Ç–µ.');
        }

        const USDrate = currencyResponse.data.Valute.USD.Value.toFixed(4).replace('.', ',');
        const EURrate = currencyResponse.data.Valute.EUR.Value.toFixed(4).replace('.', ','); 

        setRates({ USDrate, EURrate }); 

        navigator.geolocation.getCurrentPosition(async position => {
          const lat = position.coords.latitude; 
          const lon = position.coords.longitude; 

          const weatherResponse = await axios.get(
            `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${weatherApiKey}`
          );

          if (!weatherResponse.data.main) {
            throw new Error('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ.');
          }

          setWeatherData(weatherResponse.data);
        });
      } catch (err) {
        console.error(err);
        setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö.');
      } finally {

        setLoading(false);
      }
    }
    fetchAllData(); // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ–¥—É—Ä—É –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
  }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω—ã–π –∑–∞–ø—É—Å–∫ —ç—Ñ—Ñ–µ–∫—Ç–∞

  
  const addTask = (userInput) => {
    if (userInput) {
      const newItem = {
        id: Math.random().toString(36).substr(2, 9), 
        task: userInput, 
        complete: false 
      };
      setTodos(prevTodos => [...prevTodos, newItem]); 
    }
  };

  const removeTask = (id) => {
    setTodos(prevTodos => prevTodos.filter((todo) => todo.id !== id)); // –û—Å—Ç–∞–≤–ª—è–µ—Ç –∑–∞–¥–∞—á–∏ —Å id, –Ω–µ —Ä–∞–≤–Ω—ã–º –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–º–µ–Ω—ã —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞—á–∏ 
  const handleToggle = (id) => {
    setTodos(prevTodos =>
      prevTodos.map((task) =>
        task.id === id ? { ...task, complete: !task.complete } : task
      )
    ); // –ú–µ–Ω—è–µ–º —Å–≤–æ–π—Å—Ç–≤–æ complete –¥–ª—è –Ω—É–∂–Ω–æ–π –∑–∞–¥–∞—á–∏
  };

  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  return (
    <>
      <div className="App">
        {loading && <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>} {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ */}
        {!loading && error && <p style={{ color: 'red' }}>{error}</p>} {/* –í—ã–≤–æ–¥ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –æ–Ω–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞ */}
        {!loading && !error && ( // –ï—Å–ª–∏ –Ω–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—à–∏–±–æ–∫, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
          <>
            <div className='info'>
              <div className='money'> {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –µ–≤—Ä–æ –∏ –¥–æ–ª–ª–∞—Ä–∞*/}
                <div id="USD">–î–æ–ª–ª–∞—Ä –°–®–ê $ ‚Äî {rates.USDrate} —Ä—É–±.</div> 
                <div id="EUR">–ï–≤—Ä–æ ‚Ç¨ ‚Äî {rates.EURrate} —Ä—É–±.</div>              
              </div>
              {weatherData && ( // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ, –µ—Å–ª–∏ –µ—Å—Ç—å
                <div className="weather-info">
                  <div>
                    –ü–æ–≥–æ–¥–∞ —Å–µ–≥–æ–¥–Ω—è: <br />
                    üå°Ô∏è {(weatherData.main.temp - 273.15).toFixed(1)}¬∞C {" "}
                    üå¨Ô∏è {weatherData.wind.speed} –º/—Å{" "}
                    ‚òÅÔ∏è {weatherData.clouds.all}%{" "}
                    <img
                      className='weather-icon'
                      src={`http://openweathermap.org/img/w/${weatherData.weather[0].icon}.png`}
                      alt="–ò–∫–æ–Ω–∫–∞ –ø–æ–≥–æ–¥—ã"
                    />
                  </div>
                </div>
              )}
            </div>
          </>
        )}
        <header>
          <h1 className='list-header'>–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á: {todos.length}</h1>
        </header>
        <ToDoForm addTask={addTask} /> {/* –§–æ—Ä–º–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á */}
        {todos.map((todo) => { // –¶–∏–∫–ª –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–¥–∞—á
          return (
            <ToDo
              todo={todo}
              key={todo.id}
              toggleTask={handleToggle}
              removeTask={removeTask}
            />
          );
        })}
      </div>
    </>
  );
}

// –≠–∫—Å–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ App
export default App;



